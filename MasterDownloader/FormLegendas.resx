<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOKq
        AAnxqA048akNXPCqDm3wqg5s8KoOWuKgFzbakQAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1H8ABu6p
        DVzyqg+586sP+PWtEP/1rRD/9a0Q//SsEP/rqRf/6Kgb/+inGvbmpxq05KYaVr9/AAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCq
        Dlrzqw/h9a0Q//WtEP/1rRD/9a0Q//WtEP/zrBH/6acY/+inGv/opxr/6Kgb/+moG//pqBv/6Kcb2+Wm
        GVEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO+f
        ABDzqg6w9KwP//WtEP/1rRD/9a0Q//WtEP/1rRD/8asS/+emGP/nphn/56YZ/+enGv/opxr/6Kgb/+mo
        G//pqBv/6agb/+enG6bnohcLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADsoAkb9KwP1fWtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q/+6pEv/mpRf/5qUY/+alGP/nphn/56YZ/+en
        Gv/opxr/6Kgb/+moG//pqBv/6akc/+inG83lpRkUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA8KUPEfSrD9b1rRD/9a0Q//WtEP/1rRD/9a0Q//SsEP/rpxP/5KQW/+WkF//lpBf/5qUY/+al
        GP/nphn/56YZ/+enGv/opxr/6Kcb/+moG//pqBv/6akc/+inG83nohcLAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADzqw+09a0Q//WtEP/1rRD/9a0Q//SsEP/0rBD/6KUT/+OiFf/joxb/5KMW/+Sk
        F//lpBf/5aUY/+alGP/mphn/56YZ/+emGv/opxr/6Kcb/+ioG//pqBv/6akc/+enG6YAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8aoPYfSsEP/1rRD/9a0Q//WtEP/0rBD/7qoT/9yhIf/YnyL/2J8i/9mg
        I//ZoCP/2qEk/9qhJP/boiX/26Il/9uiJf/coib/3qQm/+SlG//npxr/6Kca/+ioG//pqBv/6agb/+im
        GVEAAAAAAAAAAAAAAAAAAAAAAAAAAOKqAAnzqw/m9a0Q//WtEP/1rRD/9a0Q//WtEP/2wEr/8/Pz//Pz
        8//z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz8//z8/P/36o0/+emGv/opxr/6Kca/+io
        G//pqBv/6Kgb279/AAQAAAAAAAAAAAAAAAAAAAAA8qsPZfWtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//W5
        NP/12p//9dmf//XZn//12Z//9dmf//XZn//12Z//9Nmf/+7Wof/v1qH/79ai/+/Xov/iqCr/5qYZ/+en
        Gf/opxr/6Kca/+ioG//pqBv/56YaVgAAAAAAAAAAAAAAAAAAAADzqw/E9a0Q//WtEP/1rRD/9a0Q//Wt
        EP/1rRD/9KwQ//SsEP/0rBD/9KwQ//SsEP/0rBD/9KwQ//KrEP/mpBX/5KMW/+SjF//lpBf/5aQY/+al
        GP/mphn/56YZ/+emGf/opxr/6Kca/+ioG//opxq0AAAAAAAAAAAAAAAA8KUPEfStD/z1rRD/9a0Q//Wt
        EP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//SsEP/0tzD/36k0/+GhFf/joxb/5KMW/+Sk
        F//lpBf/5aUY/+alGP/mphn/56YZ/+emGf/npxr/6Kca/+mnGvb/tgAHAAAAAAAAAADzrQ5F9a0Q//Wt
        EP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9bcx//Ps2//v6dz/2qY2/+Gh
        Ff/joxb/5KMW/+SkF//lpBf/5aUY/+alGP/mphj/56YZ/+emGf/opxr/7akW//CqDjYAAAAAAAAAAPKq
        Dmr1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//W3Mf/z7Nv/8vLy//Ly
        8v/v6dz/2qY2/+GhFf/joxb/5KMW/+SkF//lpBf/5aUY/+alGP/mpRj/56YZ/+2pFf/0rBD/86wOWgAA
        AAAAAAAA8qwOfPWtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1tzH/8+zb//Ly
        8v/y8vL/8vLy//Ly8v/v6dz/2qY2/+GhFf/johb/5KMW/+SkF//lpBf/5aQX/+alGP/tqRT/9KwQ//Wt
        EP/zrA5sAAAAAAAAAAD0rA589a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9bcx//Ps
        2//y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/v6dz/2qY2/+GgFf/johb/5KMW/+SjFv/lpBf/7akT//Wt
        EP/1rRD/9a0Q//WsDmwAAAAAAAAAAPWtEGv1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//W3
        Mf/z7Nv/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/v6dz/2qY2/+GhFf/johX/5KMW/+2o
        E//1rRD/9a0Q//WtEP/1rRD/9q0QWwAAAAAAAAAA9K0RSPWtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//Wt
        EP/1rxb/9tiW//Terf/03q3/8+vY//Ly8v/y8vL/8vLy//Ly8v/s5tj/5tSt/+fVrf/nzpj/36Eb/+Oi
        Ff/tqBL/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRI4AAAAAAAAAADyshkU9K0R/fWtEP/1rRD/9a0Q//Wt
        EP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/12Z//8vLy//Ly8v/y8vL/8vLy/+POn//ZmhL/3J0S/92e
        E//hoBT/7qgR//WtEP/1rRD/9a0Q//WtEP/1rRD/9K0R+P+qAAkAAAAAAAAAAAAAAAD0rRPJ9a0Q//Wt
        EP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//XZn//y8vL/8vLy//Ly8v/y8vL/5M6f/9yc
        Ev/gnxL/4aAT/+6oEf/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rxO5AAAAAAAAAAAAAAAAAAAAAPWw
        Gmv1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9dmf//Ly8v/y8vL/8vLy//Ly
        8v/kzp//3JwR/+CfEv/uqBD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//OxG1wAAAAAAAAAAAAA
        AAAAAAAA6aoqDPWuFOr1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/12Z//8vLy//Ly
        8v/y8vL/8vLy/+TOn//cnBH/7qkQ//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/0rhXh/6oqBgAA
        AAAAAAAAAAAAAAAAAAAAAAAA9bQhavWtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//Xa
        n//z8/P/8/Pz//Pz8//z8/P/59Cf/+ynEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//a1
        JFoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/fwAC9bEcvvWtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//Wt
        EP/1rRD/9bAZ//WxHv/1sR7/9bEe//WxHv/1rxn/9KwP//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//Wt
        EP/2shywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzvDcX9a8Y3vWtEP/1rRD/9a0Q//Wt
        EP/1rRD/9a0Q//WtEP/1rRD/9a0Q//SsEP/0rBD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//Wt
        EP/1rRD/9a8Z1e+/PxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD3uzwi9bAZ3vWt
        EP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//Wt
        EP/1rRD/9a0Q//WwGtb1vDgbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADzvEIX9bIhvvWtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//Wt
        EP/1rRD/9a0Q//WtEP/2syO0/8NLEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/f38C97kwavawGur1rRD/9a0Q//WtEP/1rRD/9a0Q//WtEP/1rRD/9a0Q//Wt
        EP/1rRD/9a0Q//WtEP/1sBrm9LgxYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6b9qDPe3Mmv2siDJ9K8V/fWtEP/1rRD/9a0Q//Wt
        EP/1rRD/9a0Q//SvFvz1siHE97gyZeLGcQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADyzHIU978/SPe3
        Mmv2tyt89LcrfPW2MGr3wEJF/9J4EQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////wD///gAH//wAA//wAAD/4AAAf8AAAD/AAAA/gAAAHwAAAA8AA
        AAPAAAADgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAHAAAADwAAAA8AAAAPgAAAH4AAAD/AA
        AA/4AAAf/AAAP/4AAP//gAH///AP//////8=
</value>
  </data>
</root>